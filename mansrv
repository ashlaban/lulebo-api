#!/usr/bin/env python3

import argparse
import sys


parser = argparse.ArgumentParser(description='Manage servers')

subparsers = parser.add_subparsers()

parser_backend = subparsers.add_parser('backend', help='Add a user to the database')
parser_backend.add_argument('--start', action='store_true', help='Start the backend server.')
parser_backend.add_argument('--test' , action='store_true', help='Run tests for backend.')
parser_backend.add_argument('--port' , help='Override port given in config.py')
parser_backend.set_defaults(command='backend')

parser_frontend = subparsers.add_parser('frontend', help='Add a user to the database')
parser_frontend.add_argument('--start', action='store_true', help='Start the frontend server.')
parser_frontend.add_argument('--test' , action='store_true', help='Run tests for backend.')
parser_frontend.add_argument('--port' , help='Override port given in config.py')
parser_frontend.set_defaults(command='frontend')

args = parser.parse_args()





if args.command == 'backend' and args.start:
    from backend import create_app, db
    from config import WEB_PORT_BACKEND

    backend = create_app()

    print('Starting backend server on port {}'.format(WEB_PORT_BACKEND))
    backend.run(port=WEB_PORT_BACKEND)

if args.command == 'backend' and args.test:
    import unittest
    # import backend.tests

    unittest.main('backend.tests', argv=[sys.argv[0]])

if args.command == 'frontend' and args.start:
    from frontend import frontend
    from config import WEB_PORT_FRONTEND

    print('Starting frontend server on port {}'.format(WEB_PORT_FRONTEND))
    frontend.run(port=WEB_PORT_FRONTEND)

if args.command == 'frontend' and args.test:
    import unittest
    import frontend.tests

    unittest.main(argv=[sys.argv[0]])
